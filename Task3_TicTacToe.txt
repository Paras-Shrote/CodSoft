#include<stdio.h>
int main()
{
    char tictac [3][3]; //int [row][column]
    int row,column;
    int n;
    int i,j;
    n=1;
   
    i=0;
    /*initialization*/
    while(i<=2) //row
        {
            j=0;
            while(j<=2) //column
            {
                tictac[i][j]='.';
                j++;
            }
            i++;
        }
    /*print blank*/
     i=0;
        while(i<=2) //row
        {
            j=0;
            while(j<=2) //column
            {
                printf("%c ",tictac[i][j]);
                j++;
            }
            printf("\n");
            i++;
        }
       
   
    /*moves*/
    while(n<=9)
    {   printf("Move:%d\n",n);
        printf("Row(1-3):");
        scanf("%d",&row);
        fflush(stdin);
        printf("Column(1-3):");
        scanf("%d",&column);
        fflush(stdin);
       
        if(n%2==0)
        {
		if (tictac [row-1][column-1] == '.') 
		{ 
		   tictac [row-1][column-1]='X';
		} 
		else 
		{
	 	printf("Position already occupied. Enter a different position.");
	 	continue; 
		}
        else
        {
            
       		if (tictac [row-1][column-1] == '.') 
		{ 
		   tictac [row-1][column-1]='O';
		} 
		else 
		{
	 	printf("Position already occupied. Enter a different position.");
	 	continue; 
		}
	}
       
        //print changes
        i=0;
        while(i<=2) //row
        {
            j=0;
            while(j<=2) //column
            {
                printf("%c ",tictac[i][j]);
                j++;
            }
            printf("\n");
            i++;
        }
          if(n>=5)
{
           /*horizontal winning*/
           if(tictac[1][1]==tictac[1][2]==tictac[1][3]=='X')
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[2][1]==tictac[2][2]==tictac[2][3]=='X') 
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[3][1]==tictac[3][2]==tictac[3][3]=='X') printf("X Won")
  		{
  		 printf("X Won");
  		 break;
  		}  
           
  /*vertical winning*/
           if(tictac[1][1]==tictac[2][1]==tictac[3][1]=='X')   		
		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[1][2]==tictac[2][2]==tictac[3][2]=='X') 
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[1][3]==tictac[2][3]==tictac[3][3]=='X') 
  		{
  		 printf("X Won");
  		 break;
  		}  

  /*diagonal winning*/
  if(tictac[1][1]==tictac[2][2]==tictac[3][3]=='X') 
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[1][3]==tictac[2][2]==tictac[3][1]=='X') 
  		{
  		 printf("X Won");
  		 break;
  		}    

  /*horizontal winning*/
  if(tictac[1][1]==tictac[1][2]==tictac[1][3]=='O') 
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[2][1]==tictac[2][2]==tictac[2][3]=='O') 
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[3][1]==tictac[3][2]==tictac[3][3]=='O')  
  		{
  		 printf("X Won");
  		 break;
  		}  
           
  /*vertical winning*/
           if(tictac[1][1]==tictac[2][1]==tictac[3][1]=='X')  
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[1][2]==tictac[2][2]==tictac[3][2]=='O') 
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[1][3]==tictac[2][3]==tictac[3][3]=='O') 
  		{
  		 printf("X Won");
  		 break;
  		}  

  /*diagonal winning*/
  if(tictac[1][1]==tictac[2][2]==tictac[3][3]=='O')
  		{
  		 printf("X Won");
  		 break;
  		}  
  if(tictac[1][3]==tictac[2][2]==tictac[3][1]=='O') 
  		{
  		 printf("X Won");
  		 break;
  		}     
}

    
        n++;
    }
   
   
    return 0;
}
